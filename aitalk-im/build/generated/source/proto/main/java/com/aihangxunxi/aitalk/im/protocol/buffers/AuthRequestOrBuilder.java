// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Auth.proto

package com.aihangxunxi.aitalk.im.protocol.buffers;

public interface AuthRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.aihangxunxi.aitalk.im.protocol.buffers.AuthRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 用户token
   * </pre>
   *
   * <code>string token = 1;</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <pre>
   * 用户token
   * </pre>
   *
   * <code>string token = 1;</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   *设备号
   * </pre>
   *
   * <code>string device_code = 2;</code>
   * @return The deviceCode.
   */
  java.lang.String getDeviceCode();
  /**
   * <pre>
   *设备号
   * </pre>
   *
   * <code>string device_code = 2;</code>
   * @return The bytes for deviceCode.
   */
  com.google.protobuf.ByteString
      getDeviceCodeBytes();

  /**
   * <pre>
   *设备类型:Desktop、Phone、Tablet、Unknown
   * </pre>
   *
   * <code>string device_idiom = 3;</code>
   * @return The deviceIdiom.
   */
  java.lang.String getDeviceIdiom();
  /**
   * <pre>
   *设备类型:Desktop、Phone、Tablet、Unknown
   * </pre>
   *
   * <code>string device_idiom = 3;</code>
   * @return The bytes for deviceIdiom.
   */
  com.google.protobuf.ByteString
      getDeviceIdiomBytes();

  /**
   * <pre>
   *客户端平台:Android、iOS、Unknown
   * </pre>
   *
   * <code>string device_platform = 4;</code>
   * @return The devicePlatform.
   */
  java.lang.String getDevicePlatform();
  /**
   * <pre>
   *客户端平台:Android、iOS、Unknown
   * </pre>
   *
   * <code>string device_platform = 4;</code>
   * @return The bytes for devicePlatform.
   */
  com.google.protobuf.ByteString
      getDevicePlatformBytes();
}
