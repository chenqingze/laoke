// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

package com.aihangxunxi.aitalk.im.protocol.buffers;

public final class MessageOuterClass {
  private MessageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_aihangxunxi_aitalk_im_protocol_buffers_Message_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_aihangxunxi_aitalk_im_protocol_buffers_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMessage.proto\022*com.aihangxunxi.aitalk." +
      "im.protocol.buffers\032\tMsg.proto\032\014OpCode.p" +
      "roto\032\020Connection.proto\032\nAuth.proto\"\357\002\n\007M" +
      "essage\022\r\n\005magic\030\001 \001(\004\022\017\n\007version\030\002 \001(\r\022C" +
      "\n\007op_code\030\003 \001(\01622.com.aihangxunxi.aitalk" +
      ".im.protocol.buffers.OpCode\022\013\n\003seq\030\004 \001(\004" +
      "\022O\n\014auth_request\030\013 \001(\01327.com.aihangxunxi" +
      ".aitalk.im.protocol.buffers.AuthRequestH" +
      "\000\022G\n\010auth_ack\030\014 \001(\01323.com.aihangxunxi.ai" +
      "talk.im.protocol.buffers.AuthAckH\000\022M\n\013ms" +
      "g_request\030\024 \001(\01326.com.aihangxunxi.aitalk" +
      ".im.protocol.buffers.MsgRequestH\000B\t\n\007pay" +
      "loadB\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aihangxunxi.aitalk.im.protocol.buffers.Msg.getDescriptor(),
          com.aihangxunxi.aitalk.im.protocol.buffers.OpCodeOuterClass.getDescriptor(),
          com.aihangxunxi.aitalk.im.protocol.buffers.Connection.getDescriptor(),
          com.aihangxunxi.aitalk.im.protocol.buffers.Auth.getDescriptor(),
        });
    internal_static_com_aihangxunxi_aitalk_im_protocol_buffers_Message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_aihangxunxi_aitalk_im_protocol_buffers_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_aihangxunxi_aitalk_im_protocol_buffers_Message_descriptor,
        new java.lang.String[] { "Magic", "Version", "OpCode", "Seq", "AuthRequest", "AuthAck", "MsgRequest", "Payload", });
    com.aihangxunxi.aitalk.im.protocol.buffers.Msg.getDescriptor();
    com.aihangxunxi.aitalk.im.protocol.buffers.OpCodeOuterClass.getDescriptor();
    com.aihangxunxi.aitalk.im.protocol.buffers.Connection.getDescriptor();
    com.aihangxunxi.aitalk.im.protocol.buffers.Auth.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
