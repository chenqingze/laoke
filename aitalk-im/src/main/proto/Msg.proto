syntax = "proto3";
option java_multiple_files = true;
package com.aihangxunxi.aitalk.im.protocol.buffers;

//***********************消息相关***********************//

// 消息发送请求
message MsgRequest {
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
  string conversation_id = 2; // 消息接受方
  ConversationType conversation_type = 3; // 会话类型
  MsgStatus msg_status = 4; // 消息状态
  MsgType msg_type = 5; // 消息附件
  string msg_attachStr = 6; // 消息附件json
  string content = 7; // 消息内容
  uint64 time = 8; // 发送时间
  string extend_data = 9; // 扩展字段
  string sender_id = 10; // 追加 发送方id 用于判断群聊成员是否在群中
  string msg_direction = 11; // 方向
  string sender_name = 12;// 发送者名
  string consult_direction = 13; // 咨询方向
}

enum ConversationType{
  P2P = 0 ;MUC = 1; NOTIFICATION = 2; CHATROOM = 3; TEAM = 4; CONSULT = 5;
}

enum MsgStatus{
  DRAFT = 0; // 草稿
  SENDING = 1; // 正在发送中
  SUCCESS = 2; // 发送成功
  FAIL = 3; // 发送失败
  READ = 4; // 消息已读 发送消息时表示对方已看过该消息 接收消息时表示自己已读过，一般仅用于音频消息
  UNREAD = 5;// 未读状态
  WITHDRAW = 6;// 撤回
}


enum MsgType{
  TEXT = 0; // 文本0

  AUDIO = 1; // 语音1

  VIDEO = 2; // 视频2

  LOCATION = 3; // 位置3

  CARD = 4; // 名片4

  IMAGE = 5; // 图片5

  INFO = 6; // 讯息6

  PURCHASE = 7; // 团购7

  NOTIFICATIONS = 8; // 通知消息8,

  GOODS = 9; // 商品9

  BARTER = 10; // 易货10

  STORE = 11; // 商铺11

  ROB = 12; // 抢单12

  GROUP_INVITATION = 13; // 群聊邀请13

  GROUP_NOTIFICATION = 14; // 群通知14

  FILE = 15; // 文件",15

  REPLY = 16; // 回复16

  AT = 17; // @某人17

  PREORDER = 18; // 预购单18

  DELIVERY = 19; // 配送19

  DYNAMIC = 20; // 动态 20

  AVCHAT = 21; // 音视频通话

  TIP = 22; // 提醒消息

  ROBOT = 23; // 机器人消息

  CUSTOM = 24; // 自定义消息

  UNDEF = 25; // UNKNOWN
}

// 消息发送请求收到确认
message MsgAck {
  string msg_id = 1; // 消息id
  string sender_id = 2;
  string seq = 3; // 回执编号
  ConversationType conversation_type = 4;// 多人还是单人

  uint64 created_at = 5;
  uint64 updated_at = 6;
}


// 新消息（阅读）通知
message MsgReadNotify {
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
  string conversation_id = 2; // 消息接受方
  uint32 conversation_type = 3; // 会话类型
  uint32 msg_status = 4; // 消息状态
  uint32 msg_type = 5; // 消息附件
  string msg_attachStr = 6; // 消息附件json
  string content = 7; // 消息内容
  uint64 time = 8; // 发送时间
  string extend_data = 9; // 扩展字段

  string sender_id = 10; // 追加 发送方id 用于判断群聊成员是否在群中
  uint64 created_at = 11;
  uint64 updated_at = 12;
  string consult_direction = 13;  // 咨询方向

}

// 消息已读确认
message MsgReadAck{
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
}

//// 消息已读确认
//message MsgReadConfirmAck{
//
//}


// 消息发送通知，用于多端同步
message MsgRequestNotify {
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
  string conversation_id = 2; // 消息接受方
  uint32 conversation_type = 3; // 会话类型
  uint32 msg_status = 4; // 消息状态
  uint32 msg_type = 5; // 消息附件
  string msg_attachStr = 6; // 消息附件json
  string content = 7; // 消息内容
  uint32 time = 8; // 发送时间
  string extend_data = 9; // 扩展字段
}

// 消息已读通知，用于多端同步。
message MsgReadConfirmNotify{
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
}

// 离线消息请求:用于登录后拉去离线消息
message OfflineMsgRequest{

}

// 离线消息响应：用于响应离线消息
message OfflineMsgAck{

}


message WithdrawMucRequest{
  string msg_id = 1;
  string group_id = 2;
  string success = 3;
  string message = 4;
}

message WithdrawMucAck{
  string msg_id = 1;
  string group_id = 2;
  string success = 3;
  string message = 4;
}
message PullMucHistRequest{
  string user_id = 1;
  string last_chat_time = 2;
}

message PullMucHistAck{
  string user_id = 1;
  string message = 2;
  string success = 3;
  repeated MucBody muc = 4;
}

message MucBody{
  string msg_id = 1; // 消息id、可由发送方生成,用户消息去重,这里由MsgAck 返回给客户端，且返回时携带相同seq
  string conversation_id = 2; // 消息接受方
  ConversationType conversation_type = 3; // 会话类型
  MsgStatus msg_status = 4; // 消息状态
  MsgType msg_type = 5; // 消息附件
  string msg_attachStr = 6; // 消息附件json
  string content = 7; // 消息内容
  uint64 time = 8; // 发送时间
  string extend_data = 9; // 扩展字段
  string sender_id = 10; // 追加 发送方id 用于判断群聊成员是否在群中
}

message MucReadNotifyRequest{
  string msg_id = 1;
  string group_id = 2;
}

message UpdateUserProfileRequest{
  string user_id = 1;
  string profile_header = 2;
  string nickname = 3;
  string userType = 4;
}
message UpdateUserProfileAck{
  string user_id = 1;
  string message = 2;
  string success = 3;
}
// 撤回咨询消息发送
message WithdrawConsultRequest{
  string msg_id = 1;
  string conversation_id = 2;
  string consult_direction = 3;
  string success = 4;
  string message = 5;
}
// 撤回咨询消息回执
message WithdrawConsultAck{
  string msg_id = 1;
  string conversation_id = 2;
  string consult_direction = 3;
  string success = 4;
  string message = 5;
}
message SendSystemInfoRequest{
  string msg_id = 1;
  string order_id = 2;
  string receiver_id = 3;
  string title = 4;
  string content = 5;
  string image_path = 6;
  string type = 7;
  uint64 created_at = 8;
  uint64 updated_at = 9;
  string status = 10;
}
